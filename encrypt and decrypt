def getDoubleAlphabet(alphabet):
    doubleAlphabet = alphabet + alphabet
    return doubleAlphabet

def getMessage():
    stringToEncrypt = input("Please enter a message to encrypt: ")
    return stringToEncrypt

def getCipherKey():
    shiftAmount = input (" Please enter a key (whole number from 1-25): ")
    return shiftAmount

def encryptMessage(message, cipherkey, alphabet):
    encyptedMessage = ""
    upperCaseMessage = ""
    upperCaseMessage = message.upper()
    for currentCharacter in upperCaseMessage:
        position = alphabet.find(currentCharacter)
        newposition = position + int(cipherKey)
        if currentCharacter in alphabet:
            encryptedMessage = encryptedMessage + alphabet[newPosition]
        else:
                encryptedMessage = encryptedMessage + currentCharacter
                return encryptedMessage
            
def decryptMessage(message, cipherkey, alphabet):
    decryptkey = -1 * int(cipherkey)
    return encryptMessage(message, decryptkey, alphabet)
            
def runCaesarCipherProgram():
    myAlphabet="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    print(f'Alphabet: {myAlphabet}')
    myAlphabet2 = getDoubleAlphabet(myAlphabet)
    print(f'Alphabet2: {myAlphabet2}')
    myMessage = getMessage()
    print(myMessage)
    myCipherKey = getCipherKey()
    print(myCipherKey)
    myEncryptedMessage = encryptMessage(myMessage, myCipherKey, myAlphabet2)
    print(f'Encrypted Message: {myEncryptedMessage}')
    myDecryptedMessage = decryptMessage(myEncryptedMessage, myCipherKey, myAlphabet2)
    print(f'Decypted Message: {myDecryptedMessage}')
    
runCaesarCipherProgram()

